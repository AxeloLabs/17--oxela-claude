# ============================================================
# QUERIES - Utilisateurs
# ============================================================

# Récupérer un utilisateur par son Firebase UID
query GetUserByFirebaseUid($firebaseUid: String!) @auth(level: USER) {
  users(where: { firebaseUid: { eq: $firebaseUid } }) {
    id
    firebaseUid
    email
    displayName
    photoURL
    role
    createdAt
  }
}

# Récupérer tous les utilisateurs (admin only)
query ListUsers @auth(level: USER) {
  users(orderBy: { createdAt: DESC }) {
    id
    email
    displayName
    role
    createdAt
  }
}

# ============================================================
# QUERIES - Produits
# ============================================================

# Liste tous les produits actifs
query ListProducts(
  $limit: Int
  $offset: Int
  $categoryId: UUID
) {
  products(
    where: { 
      _and: [
        { status: { eq: ACTIVE } }
        { categoryId: { eq: $categoryId } }
      ]
    }
    limit: $limit
    offset: $offset
    orderBy: [{ createdAt: DESC }]
  ) {
    id
    name
    slug
    description
    price
    compareAtPrice
    stock
    status
    imageUrl
    images
    categoryId
    createdAt
  }
}

# Récupérer un produit par son slug
query GetProductBySlug($slug: String!) {
  products(where: { slug: { eq: $slug } }) {
    id
    name
    slug
    description
    price
    compareAtPrice
    stock
    status
    imageUrl
    images
    sku
    weight
    dimensions
    categoryId
    createdAt
    updatedAt
  }
}

# Recherche de produits
query SearchProducts($searchTerm: String!) {
  products(
    where: {
      _and: [
        {
          _or: [
            { name: { contains: $searchTerm } }
            { description: { contains: $searchTerm } }
          ]
        }
        { status: { eq: ACTIVE } }
      ]
    }
    limit: 20
  ) {
    id
    name
    slug
    description
    price
    imageUrl
    categoryId
  }
}

# ============================================================
# QUERIES - Catégories
# ============================================================

# Liste toutes les catégories
query ListCategories {
  categories(orderBy: [{ name: ASC }]) {
    id
    name
    slug
    description
    imageUrl
    parentId
  }
}

# Récupérer une catégorie par son slug
query GetCategoryBySlug($slug: String!) {
  categories(where: { slug: { eq: $slug } }) {
    id
    name
    slug
    description
    imageUrl
    parentId
  }
}

# Produits d'une catégorie
query GetProductsByCategory($categoryId: UUID!) {
  products(
    where: { 
      _and: [
        { categoryId: { eq: $categoryId } }
        { status: { eq: ACTIVE } }
      ]
    }
  ) {
    id
    name
    slug
    price
    imageUrl
    stock
  }
}

# ============================================================
# QUERIES - Panier
# ============================================================

# Récupérer le panier d'un utilisateur
query GetUserCart($userId: UUID!) @auth(level: USER) {
  cartItems(where: { userId: { eq: $userId } }) {
    id
    quantity
    productId
    createdAt
  }
}

# Détails d'un item du panier avec produit
query GetCartItemWithProduct($id: UUID!) @auth(level: USER) {
  cartItems(where: { id: { eq: $id } }) {
    id
    quantity
    productId
    userId
  }
}

# ============================================================
# QUERIES - Commandes
# ============================================================

# Liste les commandes d'un utilisateur
query ListUserOrders($userId: UUID!) @auth(level: USER) {
  orders(
    where: { userId: { eq: $userId } }
    orderBy: [{ createdAt: DESC }]
  ) {
    id
    orderNumber
    status
    total
    createdAt
  }
}

# Détails d'une commande
query GetOrderById($orderId: UUID!) @auth(level: USER) {
  orders(where: { id: { eq: $orderId } }) {
    id
    orderNumber
    status
    subtotal
    shippingCost
    tax
    total
    shippingName
    shippingAddress
    shippingCity
    shippingPostalCode
    shippingCountry
    billingName
    billingAddress
    billingCity
    billingPostalCode
    billingCountry
    paymentMethod
    paymentStatus
    createdAt
    userId
  }
}

# Items d'une commande
query GetOrderItems($orderId: UUID!) @auth(level: USER) {
  orderItems(where: { orderId: { eq: $orderId } }) {
    id
    quantity
    priceAtTime
    subtotal
    productId
  }
}

# Liste toutes les commandes (admin)
query ListAllOrders($status: OrderStatus) @auth(level: USER) {
  orders(
    where: { status: { eq: $status } }
    orderBy: [{ createdAt: DESC }]
    limit: 50
  ) {
    id
    orderNumber
    status
    total
    userId
    createdAt
  }
}

# ============================================================
# QUERIES - Reviews
# ============================================================

# Reviews d'un produit
query GetProductReviews($productId: UUID!, $limit: Int) {
  reviews(
    where: { productId: { eq: $productId } }
    orderBy: [{ createdAt: DESC }]
    limit: $limit
  ) {
    id
    rating
    title
    comment
    verified
    userId
    createdAt
  }
}

# Reviews d'un utilisateur
query GetUserReviews($userId: UUID!) @auth(level: USER) {
  reviews(
    where: { userId: { eq: $userId } }
    orderBy: [{ createdAt: DESC }]
  ) {
    id
    rating
    title
    comment
    verified
    productId
    createdAt
  }
}
